window.t_page_edit_jsver='1.1';

function pe__settings__init(){
	
	$(".pe-minicolors").minicolors();
	
	$('.checkbox-btn').styler();
	
    /** fix padding for hint **/
    setTimeout(function() {
        $('.panel-body').find('.pe-hint').each(function(){
	        if( $(this).html()=='' ){
		        $(this).css('padding','0px');
		    }
	    });
    }, 50);
	
}

function pe__settings__sendform(act){
	pe__settings__sendForm(act);
}

function pe__settings__sendForm(act){
	
	/* prevent doubble click */			
	if( typeof window.pe_datasendts=='undefined' ){
		window.pe_datasendts=Date.now() / 1000;	
	}else{
		if( ((Date.now()/1000) - window.pe_datasendts) < 5){
			console.log('Error: Sending data in process.');
			return;					
		}else{
			window.pe_datasendts=Date.now() / 1000;					
		}
	}

	showLoadIcon();					
	
	var recordid=$('.pe-settings-form').attr('data-rec-id');	
	var tplid=$('.pe-settings-form').attr('data-rec-tplid');

	var formdata = $('#form'+recordid).serialize();
						
	$.ajax({
	  type: "POST",
	  url: "/page/submit/",
	  data: formdata,
	  dataType : "text",
	  success: function(respond){
	  		hideLoadIcon();
	  		delete window.pe_datasendts;
	  		if(recordid=='132'){location.reload();return;}
			$('html, body').animate({scrollTop: $("#record"+recordid).offset().top-100}, 700);
		    window.blockList.rebuildList();
			updateRecord(recordid);
			if(respond==''){
				updateUndoButton();	
				if(act!="update")closeEditForm();							
			}else{
				$("#preview"+recordid).html(respond);
			}
	  },
	  error:  function(xhr, str){
		  hideLoadIcon();
		  delete window.pe_datasendts;
		  $("#preview"+recordid).html(xhr.responseCode);
	  }				  
	});	
	
}				    

function pe__settings__collapseGroup(id){
	var el=$("#group_"+id);
	if(el.css("display")=="none"){
		el.slideDown('slow');
		el.parent().find("#grouptitle_"+id).find(".glyphicon").removeClass("glyphicon-circle-arrow-right").addClass("glyphicon-circle-arrow-down");
	}else{
		el.slideUp('slow');
		el.parent().find("#grouptitle_"+id).find(".glyphicon").removeClass("glyphicon-circle-arrow-down").addClass("glyphicon-circle-arrow-right");
	}
}    

function collapsegroup(id){
	pe__settings__collapseGroup(id);
}    


function pe__content__init(){
	
	var recordid=$('.pe-content-form').attr('data-rec-id');	
	var tplid=$('.pe-content-form').attr('data-rec-tplid');
	
	if(! window.country) {
		window.country = $('body').data('country');
	}

	$("#formbox"+recordid+" textarea").not("#noredactor").redactor({
		lang: (lang=='RU' ? 'ru' : 'en'),
    	linebreaks: true,
    	boldTag: 'b',
    	italicTag: 'i',
		replaceDivs: false,	        	
    	allowedTags: ['p', 'a', 'i', 'b','br','div','del','u','ul','ol','li','hr','sup','sub','em','table','tr','td','th','tbody','thead','strike','span','inline','strong','h1','h2','h3','h4','h5','h6'],
		buttons: ['bold', 'italic', 'deleted', 'link','unorderedlist', 'orderedlist',''],
    	dragUpload: false,
    	plugins: (window.country == "RU" || window.country == "BY" || window.country == "UA" ? ['underline','fontcolorex','fontweight','setfontfamily','setfontsize','setlineheight','setalign',"typograf",'clearstyle'] : ['underline','fontcolorex','fontweight','setfontfamily','setfontsize','setlineheight','setalign','clearstyle']),
	    initCallback: function()
	    {
			this.$toolbar.css("display","none");
			
            if (typeof $is_email!='undefined' && $is_email=='y') {
	            this.$toolbar.find('.re-fontweight').css('display','none');
	            this.$toolbar.find('.re-setfontfamily').css('display','none');
	            this.$toolbar.find('.re-setfontsize').css('display','none');
	            this.$toolbar.find('.re-setlineheight').css('display','none');
	            this.$toolbar.find('.re-setalign').css('display','none');
	            this.$toolbar.find('.re-typograf').css('display','none');	            
            }					

	    },
		changeCallback: function(html)
		{
			window.waschanged="yes";
		},
	    focusCallback: function(e)
	    {
			this.$toolbar.css("display","block");
			var y=this.$editor.has('div').is("div");
			if(y==true) {
				var st=getAttrStrintoArr(this.$editor.find('div').attr('style'));
				if(st['font-size']!==undefined && st['font-size']!="")this.setfontsize.enter(st['font-size']);
				if(st['line-height']!==undefined && st['line-height']!="")this.setlineheight.enter(st['line-height']);
				if(st['text-align']!==undefined && st['text-align']!="")this.setalign.enter(st['text-align']);
				if(st['font-family']!==undefined && st['font-family']!="")this.setfontfamily.enter(st['font-family']);
				if(st['color']!==undefined && st['color']!="")this.fontcolorex.enter(st['color']);
				this.$editor.find('div').contents().unwrap();
			}
	    },
    	blurCallback: function(e)
		{
			this.$toolbar.css("display","none");
			if(window.waschanged){
				var value=this.$editor.html();
				value=value.replace(/&nbsp;/g, ' ');
			
				//if was set custom styles
				var str="";
				var el=this.$box.parent();
				if(el.attr('data-redactor-font-size')!=undefined)str=str+"font-size:"+el.attr('data-redactor-font-size')+";";
				if(el.attr('data-redactor-line-height')!=undefined)str=str+"line-height:"+el.attr('data-redactor-line-height')+";";
				if(el.attr('data-redactor-text-align')!=undefined)str=str+"text-align:"+el.attr('data-redactor-text-align')+";";
				if(el.attr('data-redactor-font-family')!=undefined)str=str+"font-family:"+el.attr('data-redactor-font-family')+";";
				if(el.attr('data-redactor-color')!=undefined)str=str+"color:"+el.attr('data-redactor-color')+";";
				if(str!=""){
					value='<div style="'+str+'" data-customstyle="yes">'+value+'</div>';
					this.$editor.html(value);
					this.code.sync();
				}
				
			}
		},
		pasteBeforeCallback: function(html)
		{
			html=$.htmlClean(html, {format:true,allowedTags:['div','span','p','h1','h2','h3','a','i','b','br','del','u','ul','ol','li','sup','sub','em','strike','strong'],allowedClasses:[''],allowedAttributes:[['href'],['style'],['rel'],['data-verified'],['data-redactor-tag'],['data-redactor-style']]});
			html = html.replace(/<h1\s(.*?)>/gi, '<h1>');
			html = html.replace(/<h1><br\s?\/?><\/h1>/gi, '<br /><br />');
			html = html.replace(/<h1>([\w\W]*?)<\/h1>/gi, '$1<br /><br />');
			html = html.replace(/<h2\s(.*?)>/gi, '<h2>');
			html = html.replace(/<h2><br\s?\/?><\/h2>/gi, '<br /><br />');
			html = html.replace(/<h2>([\w\W]*?)<\/h2>/gi, '$1<br /><br />');
			html = html.replace(/<h3\s(.*?)>/gi, '<h3>');
			html = html.replace(/<h3><br\s?\/?><\/h3>/gi, '<br /><br />');
			html = html.replace(/<h3>([\w\W]*?)<\/h3>/gi, '$1<br /><br />');
			html = html.replace(/<div\s(.*?)>/gi, '<div>');
			html = html.replace(/<div><br\s?\/?><\/div>/gi, '<br />');
			html = html.replace(/<div>([\w\W]*?)<\/div>/gi, '$1<br />');
			return html;
		}
    });
    
    /** fix padding for hint **/
    setTimeout(function() {
        $('.editrecordcontent_container').find('.pe-hint').each(function(){
	        if( $(this).html()=='' ){
		        $(this).css('padding','0px');
		    }
	    });
    }, 50);

    setTimeout(function() {    
	    $('[data-need-check-link="yes"]').change(function() {
			var v=$(this).val();
			checkLinkCCtoWS(v);
		});	
    }, 500);	
    
}

function pe__content__sendform(act){
	/* prevent doubble click */	
	if( typeof window.pe_preventdblclick!='undefined' && window.pe_preventdblclick=='y' ){
		console.log('Error: pe prevent dblclick');
		return('');
	}else{
		window.pe_preventdblclick='y';
	}			
	setTimeout(function() { 
		delete window.pe_preventdblclick;
		pe__content__sendform_do(act);
	}, 100);
}

function pe__content__sendform_do(act){

	/* prevent doubble click */			
	if( typeof window.pe_datasendts=='undefined' ){
		window.pe_datasendts=Date.now() / 1000;	
	}else{
		if( ((Date.now()/1000) - window.pe_datasendts) < 5){
			console.log('Error: Sending data in process.');
			return;					
		}else{
			window.pe_datasendts=Date.now() / 1000;					
		}
	}
	
	showLoadIcon();

	/* delete all noneed data before sending */
	var $elemfordel = $('.js-not-send-on-server');
	if ($elemfordel.length > 0) {
		$elemfordel.attr('disabled', 'disabled');
	}
	
	/**
	 * перед отправкой смотрим, есть ли контрол на который навешан AceEditor
	 * и если есть, то считываем с него данные и помещаем их в контрол
	 */
	$('.pe-content-form').find('.js-aceeditor').each(function(){
		var aceeditor = $(this).data('aceeditor');
		if(aceeditor) {
			$(this).val(aceeditor.getValue());
		}
	});

	/**
	 * обновляем поле со списком
	 */
	$('.pe-content-form').find('.editlist__data').each(function(){
		if ( $('.editlist__wrapper').length ){
			var wrapper=$('.editlist__wrapper');
			if( typeof wrapper.attr('data-init-status')!='undefined' && wrapper.attr('data-init-status')=='inited' ){
				if(wrapper.attr('data-ui-type')=='edli')try {edli__allitems__getData__inJson();}catch(err){}
				if(wrapper.attr('data-ui-type')=='edfo')try {edfo__allitems__getData__inJson();}catch(err){}
			}
		}
	});
	
	var formdata = $('.pe-content-form').serializeArray();

	$.ajax({
	  type: "POST",
	  url: "/page/submit/",
	  data: formdata,
	  dataType : "text",
	  success: function(respond){
	  		if(recordid=='132'){location.reload();return;}		  
	  		hideLoadIcon();			  		
	  		delete window.pe_datasendts;

			$('html, body').animate({scrollTop: $("#record"+recordid).offset().top-100}, 700);

		    window.blockList.rebuildList();
			updateRecord(recordid);
	  		
			if(respond==''){
				updateUndoButton();	
				if(act!="update")closeEditForm();
				if(act=="update")editRecordContent(recordid);
			}else{
				$("#preview"+recordid).html(respond);
			}
	  },
	  error: function(xhr, str){
	  	  hideLoadIcon();
	  	  delete window.pe_datasendts;			  	  
		  $("#preview"+recordid).html(xhr.responseCode);
	  }				  
	});
	
}			


function pe__drawUI__Link(field,link,showlinktarget,linktarget){
	
	var label=field;
	
	if(field=='link')label=(lang=='RU' ? 'Ссылка' : 'Link');
	if(field=='link1')label=(lang=='RU' ? 'Ссылка 2' : 'Link 1');
	if(field=='link2')label=(lang=='RU' ? 'Ссылка 2' : 'Link 2');
	if(field=='link3')label=(lang=='RU' ? 'Ссылка 3' : 'Link 3');
	if(field=='link4')label=(lang=='RU' ? 'Ссылка 4' : 'Link 4');
	if(field=='link5')label=(lang=='RU' ? 'Ссылка 5' : 'Link 5');
	if(field=='link6')label=(lang=='RU' ? 'Ссылка 6' : 'Link 6');
	if(field=='link7')label=(lang=='RU' ? 'Ссылка 7' : 'Link 7');
	if(field=='link8')label=(lang=='RU' ? 'Ссылка 8' : 'Link 8');
	
	if(field=='buttonlink')label=(lang=='RU' ? 'Ссылка для кнопки' : 'Button Link');
	if(field=='buttonlink2')label=(lang=='RU' ? 'Ссылка для второй кнопки' : 'Second Button Link');
	if(field=='buttonlink3')label=(lang=='RU' ? 'Ссылка для третьей кнопки' : 'Third Button Link');
	if(field=='buttonlink4')label=(lang=='RU' ? 'Ссылка для четвертой кнопки' : 'Four Button Link');
	if(field=='buttonlink5')label=(lang=='RU' ? 'Ссылка для кнопки 5' : 'Button Link 5');
	if(field=='buttonlink6')label=(lang=='RU' ? 'Ссылка для кнопки 6' : 'Button Link 6');
	if(field=='buttonlink7')label=(lang=='RU' ? 'Ссылка для кнопки 7' : 'Button Link 7');
	if(field=='buttonlink8')label=(lang=='RU' ? 'Ссылка для кнопки 8' : 'Button Link 8');
	
	if(field=='bbuttonlink')label=(lang=='RU' ? 'Ссылка для кнопки' : 'Button Link');
	
	var field_linktarget='';
	if(field=='link')field_linktarget='linktarget';
	if(field=='link1')field_linktarget='linktarget1';
	if(field=='link2')field_linktarget='linktarget2';
	if(field=='link3')field_linktarget='linktarget3';
	if(field=='link4')field_linktarget='linktarget4';
	if(field=='link5')field_linktarget='linktarget5';
	if(field=='link6')field_linktarget='linktarget6';
	if(field=='link7')field_linktarget='linktarget7';
	if(field=='link8')field_linktarget='linktarget8';
	
	if(field=='buttonlink')field_linktarget='buttonlinktarget';
	if(field=='buttonlink2')field_linktarget='buttonlinktarget2';
	if(field=='buttonlink3')field_linktarget='buttonlinktarget3';
	if(field=='buttonlink4')field_linktarget='buttonlinktarget4';
	if(field=='buttonlink5')field_linktarget='buttonlinktarget5';
	if(field=='buttonlink6')field_linktarget='buttonlinktarget6';
	if(field=='buttonlink7')field_linktarget='buttonlinktarget7';
	if(field=='buttonlink8')field_linktarget='buttonlinktarget8';
	
	if(field=='bbuttonlink')field_linktarget='bbuttonlinktarget';	
	
	var tooltip = (lang=='RU' ? 'Пожалуйста, указывайте полный адрес ссылки, начинающийся с http:// Ссылки на другие страницы вашего сайта можно начинать с / и не указывать адрес сайта. Подробнее: <a href="http://help-ru.tilda.ws/link-to-page" target="_blank">Как поставить ссылку на другую страницу</a>' : 'Please start with http:// or / for relative link. Read more: <a href="http://help.tilda.ws/link-to-page" target="_blank">How to set link to other page</a>');
	
	var wrapper=$('.pe-form-group-field-'+field);
	
	var str = '';
	str += '<label class="pe-label">' + label + ' <img src="/tpl/img/page/pe-help.svg" class="pe-tooltip" style="display:inline-block;opacity:0.2;width:16px;padding-bottom:3px;" data-tooltip=\'' + tooltip + '\'></label>';
	str += '<div class="pe-field-link">';
	str += '    <input type="text" name="'+field+'" class="pe-input pe-field-link-input-link" data-need-check-link="yes" value="'+link+'" placeholder="' + (lang=='RU' ? 'Ссылка' : 'Link') + '">';
	str += '	<div class="pe-field-link-more" style="margin-top:-2px;">';
	if(showlinktarget=='yes'){
    str += '	<label class="pe-label-checkbox pe-field-link-target" style="padding-right:15px; font-size:11px;">';
    str += '	  	<input type="hidden" name="'+field_linktarget+'" value="'+linktarget+'" class="pe-field-link-input-target"/>';
    str += '      	<input type="checkbox" class="pe-field-link-cb-target" ' + (linktarget=='_blank' ? 'checked="checked"' : '') +'> <span class="pe-checkbox-title">' + (lang=='RU' ? 'В новом окне' : 'New window') + '</span>';
    str += '	</label>';
    }
    str += '	<span class="pe-field-link-link-pg" style="padding-right:15px; font-size:11px; cursor:context-menu;">' + (lang=='RU' ? 'Выбрать страницу' : 'Link to Page') + '</span>';
    str += '	<span class="pe-field-link-link-an" style="padding-right:15px; font-size:11px; cursor:context-menu;">' + (lang=='RU' ? 'Выбрать блок' : 'Link to Block') + '</span>';
    str += '	</div>';
	str += '</div>';		
	str += '<div class="pe-hint" style="margin-top:-10px;"></div>';
	str += '';
			
	wrapper.append(str);
		
    wrapper.find('.pe-field-link-input-link').change(function() {
		var v=$(this).val();
		if(v!=''){
			var foo=v.trim();
			if(v!=foo){
				$(this).val(foo);
			}
		}
		checkLinkCCtoWS(v);		
	});
		
	wrapper.find('.pe-field-link-link-pg').click(function() {
			var el_input=wrapper.find('.pe-field-link-input-link');
			pe__showPopUp__pageslist(el_input);		
	});

	wrapper.find('.pe-field-link-link-an').click(function() {
			var el_input=wrapper.find('.pe-field-link-input-link');
			pe__RecordPiker__show(el_input);
	});
		
	wrapper.find(".pe-field-link-cb-target").change(function(){ 
		var tempv=$(this).is(':checked');
		if(tempv){tempv="_blank";}else{tempv="";}
		wrapper.find('.pe-field-link-input-target').val(tempv);
	});							
		
}

function pe__showPopUp__pageslist(el_input){
    showLoadIcon();
    $.ajax({
      type: "POST",
      url: "/projects/submit/",
      data: {comm: "getpageslist", projectid: $projectid},
      dataType : "text",
      success: function(datastr){
          hideLoadIcon();
          pe__drawPopUp__pageslist(datastr,$projectid,el_input);
      },
      error: function(){
            alert('Request timeout (get pageslist)');
            hideLoadIcon();
      },
      timeout: 1000*90
    });	
}

function pe__drawPopUp__pageslist(datastr,projectid,el_input){
	var data=JSON.parse(datastr);

	var str='';
	str += '<button type="button" class="close" data-dismiss="modal" aria-label="Close" style="position:absolute;right:10px;top:10px;"><span aria-hidden="true">×</span></button>';
	str += '<div style="height:400px; overflow:auto;">';
	str += '<div style="padding:30px 40px;width:520px;">';
	str += '<div style="font-size:22px;padding-bottom:10px;">' + (lang=='RU' ? 'Пожалуйста, выберите страницу:' : 'Please choose a page:') + '</div>';
	for(var key in data){
		var p=data[key];
		str += '<div style="padding-top:10px;padding-bottom:10px;border-bottom:1px solid #eee;cursor:pointer" class="js-pe-popup-pageslist-item">';
		str += '<div style="font-size:18px;">'+p.title+'</div>';
		str += '<div style="font-size:14px; opacity:0.4;" class="js-pe-popup-pageslist-item-url">/'+p.url+'</div>';
		str += '</div>';
	}
	str += '</div>';	
	str += '</div>';
		
	$('#myModal').modal('show');
	$('#myModalContent').html(str);

	$(".js-pe-popup-pageslist-item").click(function() {
		var url=$(this).find('.js-pe-popup-pageslist-item-url').html();
		el_input.val(url);
		$('#myModal').modal('hide');
	});
		
}

function pe__RecordPiker__show(el_input){
	$('body').addClass('pe-recordpiker-body');
	$('.record').addClass('pe-recordpiker');
	$('body').append('<div id="select_records_toolbar" style="opacity: 1; top: 0px;"><div class="select_records_toolbar__left">' + (lang=='RU' ? 'Кликните на нужный блок' : 'Select block') + '</div><div class="select_records_toolbar__right"><a href="javascript:pe__RecordPiker__close();">' + (lang=='RU' ? 'Отмена' : 'Cancel') + '</a></div></div>');
	showCornerNotice(""+(lang=="RU" ? "Кликните на блок, чтобы его выбрать.</b>" : "Сlick on the block to select.</b>")+"",5000);
	$('.pe-recordpiker').bind( "click.recpikerevent", function( e ) {
		e.preventDefault();		
		e.stopPropagation();		
		var el=$(this);
		var v='#rec'+el.attr('recordid');
		/* anchor */
		if(el.attr('data-record-type')=='215'){
			v=el.find('.r').find('a').attr('name');
			v='#'+v;
		}
		/* popups */
		if(el.attr('data-record-type')=='316' || el.attr('data-record-type')=='746' || el.attr('data-record-type')=='331' || el.attr('data-record-type')=='358' || el.attr('data-record-type')=='702' || el.attr('data-record-type')=='390' || el.attr('data-record-type')=='756' || el.attr('data-record-type')=='766' || el.attr('data-record-type')=='750' || el.attr('data-record-type')=='714' || el.attr('data-record-type')=='364' || el.attr('data-record-type')=='365'){
			v=el.find('.r').find('[data-tooltip-hook]').attr('data-tooltip-hook');
		}		
		el_input.val(v);
		
		pe__RecordPiker__close();
	});	
}

function pe__RecordPiker__close(){
	$('.pe-recordpiker').unbind( "click.recpikerevent" );		
	$('body').removeClass('pe-recordpiker-body');
	$('.record').removeClass('pe-recordpiker');
	$('#select_records_toolbar').remove();
}



function pe__RecordsidsPiker__show(el_input){
	$('body').addClass('pe-recordpiker-body');
	$('.record').addClass('pe-recordpiker');
	$('body').append('<div id="select_records_toolbar" style="opacity: 1; top: 0px;"><div class="select_records_toolbar__left">' + (lang=='RU' ? 'Кликните на нужный блок, чтобы его отметить' : 'Select blocks') + '</div><div class="select_records_toolbar__right"><a href="javascript:pe__RecordsidsPiker__close();" style="padding:14px 20px;background-color:#ff855D;color:#fff;font-weight:500;border-radius:30px;">' + (lang=='RU' ? 'Сохранить и закрыть' : 'Save and close') + '</a></div></div>');
	//showCornerNotice(""+(lang=="RU" ? "Кликните на блок, чтобы его выбрать.</b>" : "Сlick on the block to select.</b>")+"",5000);
	
	//set wich was marked before
	$('.record').removeClass('record_selected').removeClass('active');
	
	var iv=el_input.val();
		console.log(iv);	
	if(typeof iv!='undefined' && iv!=''){
		var arr=iv.split(",");
	    for(var i=0; i<arr.length; i++) {
		    var id=arr[i];
		    if(id>0){
			    var el=$("#record"+id);
			    if(el.length){
					el.addClass('record_selected').addClass('active');	
				}
			}
		}
	}
	
	$('.pe-recordpiker').bind( "click.recpikerevent", function( e ) {
		e.preventDefault();		
		e.stopPropagation();		
		var el=$(this);
		//var v='#rec'+el.attr('recordid');
		
		//mark
		if(el.hasClass('active')){
			el.removeClass('record_selected').removeClass('active');			
		}else{
			el.addClass('record_selected').addClass('active');			
		}
		
		var value='';
		
	    $('.record_selected').each(function(){
		    var el=$(this);
			var v=el.attr('recordid');	
						
			if(value==''){
				value=v;				
			}else{
				value=value+","+v;				
			}	
			
		});	

		//set value to input
		el_input.val(value);
		
				
	});	
}


function pe__RecordsidsPiker__close(){
	$('.pe-recordpiker').unbind( "click.recpikerevent" );		
	$('body').removeClass('pe-recordpiker-body');
	$('.record').removeClass('pe-recordpiker').removeClass('record_selected').removeClass('active');
	$('#select_records_toolbar').remove();
}


function pe__drawUI__Recids(field,value){
	
	var label=field;
	
	if(field=='recids')label=(lang=='RU' ? 'ID Блоков' : 'Block ids');
	if(field=='recids2')label=(lang=='RU' ? 'ID Блоков 2' : 'Block ids 2');
	if(field=='recids3')label=(lang=='RU' ? 'ID Блоков 3' : 'Block ids 3');
	if(field=='recids4')label=(lang=='RU' ? 'ID Блоков 4' : 'Block ids 4');
	if(field=='recids5')label=(lang=='RU' ? 'ID Блоков 5' : 'Block ids 5');
			
	var tooltip = (lang=='RU' ? 'Пожалуйста, укажите ID блоков через запятую. <a href="http://help-ru.tilda.ws/design-menu#rec8321876" target="_blank">Подробнее...</a>' : 'Please set blocks ID divided by comma');
	
	var wrapper=$('.pe-form-group-field-'+field);
	
	var str = '';
	str += '<label class="pe-label">' + label + ' <img src="/tpl/img/page/pe-help.svg" class="pe-tooltip" style="display:inline-block;opacity:0.2;width:16px;padding-bottom:3px;" data-tooltip=\'' + tooltip + '\'></label>';
	str += '<div class="pe-field-recids">';
	str += '    <input type="text" name="'+field+'" class="pe-input pe-field-recids-input-link" value="'+value+'" placeholder="' + (lang=='RU' ? '' : '') + '">';
	str += '	<div class="pe-field-recids-more" style="margin-top:-2px;">';
    str += '	<span class="pe-field-recids-link-an" style="padding-right:15px; font-size:11px; cursor:context-menu;">' + (lang=='RU' ? 'Выбрать блоки' : 'Choose Blocks') + '</span>';
    str += '	</div>';
	str += '</div>';		
	str += '<div class="pe-hint" style="margin-top:-10px;"></div>';
	str += '';
			
	wrapper.append(str);
		
    wrapper.find('.pe-field-recids-input-link').change(function() {
		var v=$(this).val();
		if(v!=''){
			var foo=v.trim();
			if(v!=foo){
				$(this).val(foo);
			}
		}
	});
		
	wrapper.find('.pe-field-recids-link-an').click(function() {
			var el_input=wrapper.find('.pe-field-recids-input-link');
			pe__RecordsidsPiker__show(el_input);
	});
		
}
